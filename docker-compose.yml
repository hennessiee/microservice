version: '3.8'

services:
  account-service:
    image: nathanielravindra/account-service:latest
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/micro
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - my-network
      

  inventory-service:
    image: nathanielravindra/inventory-service:latest
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/micro
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - my-network
    restart: on-failure
  facility-service:
    image: nathanielravindra/facility-service:latest
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/micro
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - my-network
    restart: on-failure

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: micro
    ports:
      - "3306:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
  nginx:
    image: nathanielravindra/nginx-k8s:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - account-service
      - inventory-service
      - facility-service
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

